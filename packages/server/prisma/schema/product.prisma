model Product {
    id          String @id @unique @default(cuid())
    name        String
    description String
    price       Float
    type        ProductType
    features    String[]
    
    // Purchasing
    purchases   Purchase[]

    // Timestamps
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("products")
}

model Purchase {
    id          String @id @default(cuid())
    productId   String
    product     Product @relation(fields: [productId], references: [id])
    userId      String
    user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    status      PurchaseStatus @default(PENDING)
    
    paymentId   String?
    paymentProvider String?
    paymentData Json?
    
    // Timestamps
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
    @@index([productId])
    @@map("purchases")
}

enum ProductType {
    STARTER
    PRO
    ENTERPRISE
}

enum PurchaseStatus {
    PENDING
    COMPLETED
    FAILED
    REFUNDED
}